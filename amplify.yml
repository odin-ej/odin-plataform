version: 1
frontend:
  phases:
    preBuild:
      commands:
        # Define a versão do Node.js (experimente com 18 ou 20, 18 é um bom ponto de partida)
        - nvm install 18
        - nvm use 18
        - npm install -g npm@latest # Garante a versão mais recente do npm globalmente no container

        # Instala TODAS as dependências do seu package.json (incluindo devDependencies como backend-cli)
        - npm ci # Use 'npm ci' para builds determinísticos (requer package-lock.json)
                 # Se não tiver package-lock.json ou preferir, use 'npm install'

    build:
      commands:
        # Primeiro, execute o build do seu frontend Next.js.
        # O 'open-next' (que você tem no package.json) será ativado aqui.
        - npm run build

        # Em seguida, execute o deploy do seu backend Amplify Gen 2.
        # Agora, o 'ampx' DEVE estar disponível porque o 'npm ci' já foi executado.
        - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID

  artifacts:
    # Para Next.js com open-next no Amplify Hosting, a baseDirectory deve ser .open-next
    # É onde os artefatos do Next.js/open-next estarão.
    baseDirectory: .open-next
    files:
      - '**/*'
  cache:
    paths:
      # Cachear node_modules e o cache do Next.js para builds mais rápidos
      - node_modules/**/*
      - .next/cache/**/*